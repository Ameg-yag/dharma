{"name":"Dharma","tagline":" A generation-based, context-free grammar fuzzer.","body":"#### Requirements\r\n---\r\n\r\nNone\r\n\r\n\r\n#### Examples\r\n---\r\n\r\n\r\nGenerate a single test case.\r\n\r\n```\r\n% ./core/dharma.py -grammars grammar/webcrypto.dg\r\n```\r\n\r\nGenerate a single test case with multiple grammars.\r\n\r\n```\r\n% ./core/dharma.py -grammars grammar/canvas2d.dg grammar/mediarecorder.dg\r\n```\r\n\r\nGenerating test cases as files.\r\n\r\n```\r\n% ./core/dharma.py -grammars grammar/webcrypto.dg -storage . -count 5\r\n```\r\n\r\nGenerate test cases, send each over WebSocket to Firefox, observe the process for crashes and bucket them.\r\n\r\n```\r\n% ./core/dharma.py -server -grammars grammar/canvas2d.dg -template var/templates/html5/default.html\r\n% ./framboise.py -setup inbound64-release -debug -worker 4 -testcase ~/dev/projects/fuzzers/dharma/var/index.html\r\n```\r\n\r\n\r\nBenchmark the generator.\r\n\r\n```\r\n% time ./core/dharma.py -grammars grammar/webcrypto.dg -count 10000 > /dev/null\r\n```\r\n\r\n\r\n#### Grammar Cheetsheet\r\n---\r\n\r\n##### comment\r\n```\r\n%%% comment\r\n```\r\n\r\n##### controls\r\n```\r\n%const% name := value\r\n```\r\n\r\n##### sections\r\n```\r\n%section% := value\r\n%section% := variable\r\n%section% := variance\r\n```\r\n\r\n##### extension methods\r\n```\r\n%range%(0-9)\r\n%range%(0.0-9.0)\r\n%range%(a-z)\r\n%range%(!-~)\r\n%range%(0x100-0x200)\r\n\r\n%repeat%(+variable+)\r\n%repeat%(+variable+, \", \")\r\n\r\n%uri%(path)\r\n%uri%(lookup_key)\r\n\r\n%block%(path)\r\n\r\n%choice%(foo, \"bar\", 1)\r\n```\r\n\r\n##### assigning values\r\n```\r\ndigit :=\r\n    %range%(0-9)\r\n\r\nsign :=\r\n    +\r\n    -\r\n\r\nvalue :=\r\n    +sign+%repeat%(+digit+)\r\n```\r\n\r\n##### using values\r\n```\r\n+value+\r\n```\r\n\r\n##### assigning variables\r\n```\r\nvariable :=\r\n    @variable@ = new Foo();\r\n```\r\n\r\n##### using variables\r\n```\r\nvalue :=\r\n    !variable!.bar();\r\n```\r\n\r\n##### referencing values from common.dg\r\n```\r\nvalue :=\r\n    attribute=+common:number+\r\n```\r\n\r\n##### calling javascript library functions\r\n\r\n```\r\nfoo :=\r\n    Random.pick([0,1]);\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}